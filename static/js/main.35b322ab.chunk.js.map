{"version":3,"sources":["components/ListItem/ListItem.js","components/Lister/Lister.js","components/Input/Input.js","components/ContactForm/ContactForm.js","components/ArrayFilter/ArrayFilter.js","components/ContactsEditor/ContactsEditor.js","components/App.js","index.js"],"names":["ListItem","id","name","number","deleteContact","onClick","e","Contacts","props","outputArray","contacts","filter","item","includes","inputTitle","map","key","Input","inputValue","handleInput","inputName","htmlFor","type","value","onChange","ContactForm","handleChangeInput","parName","target","setState","handleSubmit","preventDefault","state","alert","sendItemBack","this","onSubmit","Component","ArrayFilter","sendFilterBack","ContactsEditor","addContact","newname","newnumber","contact","uuid","prevState","arr","find","x","contactId","setfilter","filterValue","prevPops","contactsCheck","localStorage","getItem","JSON","parse","setItem","stringify","length","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35b322ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport default function ListItem({ id, name, number, deleteContact }) {\r\n  function handlePress(e) {\r\n    deleteContact(id);\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <span>Name: {name}</span>\r\n      <br />\r\n      <span>Number: {number}</span>\r\n      <br />\r\n      <button onClick={handlePress}>Delete contact</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nListItem.propTypes = {\r\n  id: propTypes.string.isRequired,\r\n  name: propTypes.string.isRequired,\r\n  number: propTypes.string.isRequired,\r\n  deleteContact: propTypes.func.isRequired,\r\n};\r\n","import React from 'react';\nimport ListContact from '../ListItem/ListItem';\nimport propTypes from 'prop-types';\n\nexport default function Contacts(props) {\n  const outputArray = props.contacts.filter(item =>\n    item.name.includes(props.filter),\n  );\n\n  return (\n    <div>\n      <h2>{props.inputTitle}</h2>\n      <ul>\n        {outputArray.map(item => (\n          <ListContact\n            key={item.id}\n            id={item.id}\n            name={item.name}\n            number={item.number}\n            deleteContact={props.deleteContact}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContacts.propTypes = {\n  contacts: propTypes.array.isRequired,\n  deleteContact: propTypes.func.isRequired,\n};\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport default function Input({ inputValue, handleInput, inputName }) {\r\n  //console.log(handleInput);\r\n  return (\r\n    <>\r\n      <label htmlFor=\"text\">{inputName} </label>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInput}\r\n        name={inputName}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  inputValue: propTypes.string,\r\n  inputName: propTypes.string,\r\n  handleInput: propTypes.func,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Input from '../Input/Input';\r\n\r\nexport default class ContactForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      number: '',\r\n    };\r\n  }\r\n\r\n  handleChangeInput = e => {\r\n    const parName = e.target.name;\r\n    this.setState({ [parName]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.name === '' || this.state.number === '')\r\n      alert('All fields must be filled.');\r\n    else this.props.sendItemBack(this.state.name, this.state.number);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <h2>Contact Form</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Input\r\n            handleInput={this.handleChangeInput}\r\n            inputValue={name}\r\n            inputName=\"name\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <Input\r\n            handleInput={this.handleChangeInput}\r\n            inputValue={number}\r\n            inputName=\"number\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\">Add the contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport default class ArrayFilter extends Component {\r\n  state = {\r\n    name: '',\r\n  };\r\n\r\n  handleChangeInput = e => {\r\n    this.setState({ name: e.target.value });\r\n    this.props.sendFilterBack(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Filter Contacts by name:</h3>\r\n        <form>\r\n          <label htmlFor=\"text\">Name </label>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleChangeInput}\r\n            name=\"name\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nArrayFilter.propTypes = {\r\n  sendFilterBack: propTypes.func,\r\n};\r\n","import React, { Component } from 'react';\nimport ContactsLister from '../Lister/Lister';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ArrayFilter from '../ArrayFilter/ArrayFilter';\n\n// External dependacies\nimport { v4 as uuid } from 'uuid';\n\nexport default class ContactsEditor extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contacts: [],\n      filter: '',\n    };\n  }\n\n  componentDidMount(prevPops, prevState) {\n    const contactsCheck = localStorage.getItem('contacts');\n    if (contactsCheck) {\n      this.setState({ contacts: JSON.parse(contactsCheck) });\n    } else\n      this.setState({\n        contacts: [\n          { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n          { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n          { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n          { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n      });\n  }\n\n  componentDidUpdate(prevPops, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (newname, newnumber) => {\n    const contact = {\n      id: uuid(),\n      name: newname,\n      number: newnumber,\n    };\n\n    const getContactById = (arr, name) => arr.find(x => x.name === name);\n\n    this.setState(prevState => {\n      if (getContactById(prevState.contacts, newname)) {\n        alert('Such contact exists, be attentive!!!');\n        return;\n      }\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  setfilter = filterValue => {\n    return this.setState({ filter: filterValue });\n  };\n\n  render() {\n    const { contacts } = this.state;\n\n    return (\n      <div>\n        <h1>Contacts Editor</h1>\n        <ContactForm contacts={contacts} sendItemBack={this.addContact} />\n\n        <ArrayFilter sendFilterBack={this.setfilter} />\n\n        {contacts.length > 0 && (\n          <ContactsLister\n            contacts={contacts}\n            inputTitle={'Contacts list'}\n            filter={this.state.filter}\n            deleteContact={this.deleteContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport './App.css';\r\nimport ContactsEditor from './ContactsEditor/ContactsEditor';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ContactsEditor />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}